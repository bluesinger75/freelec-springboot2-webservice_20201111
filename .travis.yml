language: java
jdk:
  - openjdk8

branches: # Travis CI를 어느 브랜치가 푸시될 때 수행할지 지정 현재 옵션은 오직 master 브랜치에 push 될 때만 수행
  only:
    - master

# Travis CI 서버의 Home
cache: # 그래이들을 통해 의존성을 받게 되면 이를 해당 디렉토리에 캐시하여, 같은 의존선은 다음 배포 때부터 다시 받지 않도록 설정
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build" # master 브랜치에 푸시되었을 때 수행하는 명령어 여기서는 프로젝트 내부에 둔 gradlew 을 통해 clean & build 를 수행


before_deploy: # deploy 명령어가 실행되기 전에 수행된다. CodeDeploy 는 Jar 파일은 인식하지 못하므로 Jar+ 기타 설정 파일들을 모아 압축(zip)
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/freelec-springboot2-webservice.zip # deploy로 zip파일 이동

deploy: # S3 로 파일 업로드 혹은 CodeDeploy 로 배포 등 외부 서비스와 연동 될 행위들을 선언합니다.
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: freelec-springboot-build-pjw # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을  private 으로
    local_dir: deploy # before_deploy 에서 생성한 디렉토리
    wait-untill-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: freelec-springboot-build-pjw # S3 버킷
    key: freelec-springboot2-webservice.zip # 빌드 파일을 압축해서 전달
    bundle_type: zip
    application: freelec-springboot2-webservice # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    deployment_group: freelec-springboot2-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true

before_install:
  - chmod +x gradlew

# CI 실행 완료 시 메일로 알람
notifications: # Travis CI 실행 완료 시 자동으로 알람이 가도록 설정합니다.
  email:
    recipients:
      - bluesinger75@gmail.com